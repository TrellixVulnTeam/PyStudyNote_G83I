程序由模块组成，模块包含语句，语句包含表达式，表达式建立并处理对象
内置对象用处：使代码易于编写，是扩展的组件，往往比定制的数据结构更有效率，是语言标准的一部分

Python的核心数据类型：
数字：1234,2.1212,1+3j,Decimal,Fraction
字符串：'spam',"bob's home",b'a\xolc'
列表：[1,2,3],[1,[2,'a'],3]
字典：{'food':'spam','taste':'you'}
元祖：(1,'spam',4,'U')
文件：myfile=open('eggs','w')
集合：set('abc'),{'a','b','c'}
其它类型：类型，None，布尔型
编程单元类型：函数，模块，类
与实现相关的类型：编译的代码堆栈跟踪
注：Python的核心是对象，上诉数据类型产生对应的对象，对象与其操作是绑定的，无默认转型。

数字：外部工具包：math,random

字符串(s='spam')：
1>序列操作(索引,分片)：s[0],s[-1],s[:],s[1:3],s[1:],s[:3],s[0:3:2]
2>字符串不可变
①不能改变其部分数据(s[0]='c')，每次变量名赋值操作(s='xx')都是变量名与对象的重新绑定
②不可变：Number,string,tuple,Frozenset 可变：list,dict,set
3>特定方法
①s.find('pa'),s.replace('pa','xx'),s.split(','),s.isalpha(),s.rstrip()...
②'%s,eggs,and %s' % ('spam','SPAM')
  '{0},eggs,and {1}'.format('spam','SPAM')
4>寻求帮助：dir(对象) help(对象)
5>其它编写方法：转义字符，三引号，原始(raw)字符串常量(r'adf\adf'),处理Unicode
6>模式匹配：模块re(正则表达式)

列表(L=[123,'spam',1.23])：
1>支持字符串中的序列操作,但结果是列表
2>列表特定操作：append,pop,sort,reverse...
3>边界检查:不允许检索边界外，否则报错
4>支持多层不同类型嵌套
5>列表解析:通过对列表中的每一项运行一个表达式来创建一个新列表,每次一个，从左往右
example:[i for i in [1,2,3]]
当外层是大括号时，可用于创建集合和字典，当外层是圆括号时，可用于创建生成器
注：在迭代时，列表解析和相关函数工具(map,filter等）通常比for循环快捷且更加简便

字典(d={'food':'spam','quantity':'good'})：
1>映射操作，大括号中包含一系列“键：值”对，通过键索引，不是位置
2>嵌套
3>键的排序：字典的存放顺序和写入顺序不一定一致，可根据其键来排序
    for k in sorted(d):
        print(k,'=>',d[k]')
列表解析和相关函数工具(如map,filter)往往比for快
4>测试键是否存在:in (if not 'food' in d)
    d.get('food',0) <=> d['food'] if 'food' in d else 0

元祖tuple(T=(1,2,3,4))：
1>类似一个不可变列表,支持索引切片嵌套，但不能增删或修改其中的直接值
2>元祖提供了一种完整的约束
3>专有方法：
T.index(4)      #查找4第一次出现的位置
T.count('xx')   #'xx'出现的次数

文件(f=open('a.txt','r')：
1>创建需要调用内置open函数以字符串形式传递给它一个外部的文件名和一个处理模式的字符串
2>处理模式字符串可以不写，默认是'r'，表示只读(文件必须已经存在，否则报错)，'w'表示新建覆盖只写
3>使用完文件后要用close函数手动关闭
4>读文件的时候最好使用其本身的迭代器来读
5>文件打开模式：
r 以读方式打开，文件不存在会报错，可以用os模块的exists()函数检查
w 以写方式打开，必要时创建新文件
a 以追加模式打开 (从 EOF 开始, 必要时新建)
r+ 以读写模式打开
w+ 以读写模式打开 (参见 w )
a+ 以读写模式打开 (参见 a )
rb 以二进制读模式打开
wb 以二进制写模式打开 (参见 w )
ab 以二进制追加模式打开 (参见 a )
rb+ 以二进制读写模式打开 (参见 r+ )
wb+ 以二进制读写模式打开 (参见 w+ )
ab+ 以二进制读写模式打开 (参见 a+ )

其他核心类型：
1>集合X=set{'spam'}'：
①通过set或{...}来创建,空的{}是字典，支持一般的数学集合操作(&,|,-,+)
②是唯一的不可变的对象的无序集合，类似无值的字典的键
2>十进制数,分数,布尔值(decimal,Fraction,bool),特殊占位符None
3>type：检测类型，会破坏代码灵活性，谨慎使用
4>用户定义的类： class ClassName:pass

动态类型简介：
1>语句a=3会经历三个过程：创建对象3(确定了数据类型,数据类型属于对象)，创建变量a，把3和a相连
'=='是比较对象值是否相等，is是比较对象是否相等(内存地址是否一致),可以用切片或copy创建新对象：a=b.copy()
2>一个对象会记录变量相连个数n，若其中某个变量通过赋值指向其它地方，n-1,当n=0时垃圾回收
可以查看对象3的相连个数:import sys;sys.getrefcount(3)
3>共享引用和在原处修改
    a = 3, b = a, a is b    #True
    l1 = [1,2,3], l2 = [1,2,3], l1 is l2    #False
    l3 = l1[:], l3 is l1    #True,列表分片实现copy
    import copy #copy模块实现对象copy
    l4 = copy.copy(l1)      #浅层copy,拷贝顶层
    l5 = copy.deepcopy(l1)  #copy对象及内部关联对象

通常意义下的类型分类:
    同分类的类型共享其操作集合：
        数字(整数,浮点数，二进制，分数等) -> 支持加减乘除等
        序列(字符串,列表,元祖) -> 支持索引,分片和合并等
        映射(字典) -> 支持通过键的索引等
        集合 -> 无序无索引
    可变类型能够在原处修改:
        不可变类型(数字，字符串，元祖，不可变集合) -> 每次变化总是产生对象或把其它对象分配给变量
        可变类型(列表，字典，可变集合)

真假含义:空数据结构为假,非空结构为真,真假是对象的固有属性,非假即真,可用bool()测试真假
    'spam', 1 -> True
    "", [], {}, 0, 0.0 None  ->    False
